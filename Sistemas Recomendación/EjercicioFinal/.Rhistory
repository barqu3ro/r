ls()
?rm
a = "hola"
typeof(a)
str(a)
v = c(10,20,30,40,50,60,70,80,90,100)
1:100
a = 1:100
print(a)
# Filtrar datos para la región de Murcia
paro_murcia <- datos_paro[datos_paro$Comunidad.Autónoma == "Murcia, Región de",]
datos_paro <- read.table("https://sede.sepe.gob.es/es/portaltrabaja/resources/sede/datos_abiertos/datos/Paro_por_municipios_2019_csv.csv",
skip=1,header = TRUE, sep=";", quote = "\"", fileEncoding="latin1")
head(datos_paro)
# Filtrar datos para la región de Murcia
paro_murcia <- datos_paro[datos_paro$Comunidad.Autónoma == "Murcia, Región de",]
print(paro_murcia)
# Seleccionar columnas requeridas
paro2019MurciaMunicipioMes <- paro_murcia[, c("Código.mes", "Codigo.Municipio", "Municipio", "total.Paro.Registrado")]
print(paro2019MurciaMunicipioMes)
# Filtrar datos para la región de Murcia
paro_murcia <- datos_paro[datos_paro$Comunidad.Autónoma == "Murcia, Región de",]
#print(paro_murcia)
# Renombrar la columna "Código.mes" a "FECHA"
colnames(paro2019MurciaMunicipioMes)[colnames(paro2019MurciaMunicipioMes) == "Código.mes"] <- "FECHA"
# Verificar el nuevo nombre de la columna
print(colnames(paro2019MurciaMunicipioMes))
# Seleccionar columnas requeridas
paro2019MurciaMunicipioMes <- paro_murcia[, c("Código.mes", "Codigo.Municipio", "Municipio", "total.Paro.Registrado")]
print(paro2019MurciaMunicipioMes)
datos_paro <- read.table("https://sede.sepe.gob.es/es/portaltrabaja/resources/sede/datos_abiertos/datos/Paro_por_municipios_2019_csv.csv",
skip=1,header = TRUE, sep=";", quote = "\"", fileEncoding="latin1")
head(datos_paro)
# Filtrar datos para la región de Murcia
#paro_murcia <- datos_paro[datos_paro$Comunidad.Autónoma == "Murcia, Región de",]
#print(paro_murcia)
# Obtener los nombres de las columnas de paro_murcia
#columnas_paro_murcia <- names(paro_murcia)
# Imprimir los nombres de las columnas
#print(columnas_paro_murcia)
# Filtrar datos para la región de Murcia
paro_murcia <- datos_paro[datos_paro$Comunidad.Autónoma == "Murcia, Región de",]
# Seleccionar las columnas requeridas
paro2019MurciaMunicipioMes <- paro_murcia[, "Código.mes", "Codigo.Municipio", "Municipio", "total.Paro.Registrado")]
# Filtrar datos para la región de Murcia
#paro_murcia <- datos_paro[datos_paro$Comunidad.Autónoma == "Murcia, Región de",]
#print(paro_murcia)
# Obtener los nombres de las columnas de paro_murcia
#columnas_paro_murcia <- names(paro_murcia)
# Imprimir los nombres de las columnas
#print(columnas_paro_murcia)
# Filtrar datos para la región de Murcia
paro_murcia <- datos_paro[datos_paro$Comunidad.Autónoma == "Murcia, Región de",]
# Seleccionar las columnas requeridas
paro2019MurciaMunicipioMes <- paro_murcia[, "Código.mes", "Codigo.Municipio", "Municipio", "total.Paro.Registrado")]
# Filtrar datos para la región de Murcia
#paro_murcia <- datos_paro[datos_paro$Comunidad.Autónoma == "Murcia, Región de",]
#print(paro_murcia)
# Obtener los nombres de las columnas de paro_murcia
#columnas_paro_murcia <- names(paro_murcia)
# Imprimir los nombres de las columnas
#print(columnas_paro_murcia)
# Filtrar datos para la región de Murcia
paro_murcia <- datos_paro[datos_paro$Comunidad.Autónoma == "Murcia, Región de",]
# Seleccionar las columnas requeridas
paro2019MurciaMunicipioMes <- paro_murcia[, ("Código.mes", "Codigo.Municipio", "Municipio", "total.Paro.Registrado")]
# Filtrar datos para la región de Murcia
#paro_murcia <- datos_paro[datos_paro$Comunidad.Autónoma == "Murcia, Región de",]
#print(paro_murcia)
# Obtener los nombres de las columnas de paro_murcia
#columnas_paro_murcia <- names(paro_murcia)
# Imprimir los nombres de las columnas
#print(columnas_paro_murcia)
# Filtrar datos para la región de Murcia
paro_murcia <- datos_paro[datos_paro$Comunidad.Autónoma == "Murcia, Región de",]
# Seleccionar las columnas requeridas
paro2019MurciaMunicipioMes <- paro_murcia[, ("Código.mes", "Codigo.Municipio", "Municipio", "total.Paro.Registrado")]
# Filtrar datos para la región de Murcia
#paro_murcia <- datos_paro[datos_paro$Comunidad.Autónoma == "Murcia, Región de",]
#print(paro_murcia)
# Obtener los nombres de las columnas de paro_murcia
#columnas_paro_murcia <- names(paro_murcia)
# Imprimir los nombres de las columnas
#print(columnas_paro_murcia)
# Filtrar datos para la región de Murcia
paro_murcia <- datos_paro[datos_paro$Comunidad.Autónoma == "Murcia, Región de",]
# Seleccionar las columnas requeridas
paro2019MurciaMunicipioMes <- paro_murcia[, ("Código.mes" , "Codigo.Municipio" , "Municipio", "total.Paro.Registrado")]
# Filtrar datos para la región de Murcia
paro_murcia <- datos_paro[datos_paro$Comunidad.Autónoma == "Murcia, Región de",]
# Seleccionar las columnas requeridas
paro2019MurciaMunicipioMes <- paro_murcia[, c("Código.mes", "Codigo.Municipio", "Municipio", "total.Paro.Registrado")]
print(paro2019MurciaMunicipioMes)
# Filtrar datos para la región de Murcia
paro_murcia <- datos_paro[datos_paro$Comunidad.Autónoma == "Murcia, Región de",]
# Seleccionar las columnas requeridas
paro2019MurciaMunicipioMes <- paro_murcia[, c("Código.mes", "Codigo.Municipio", "Municipio", "total.Paro.Registrado")]
#paro2019MurciaMunicipioMes <- rename(paro2019MurciaMunicipioMes, Fecha = Código.mes)
paro2019MurciaMunicipioMes <- rename(paro2019MurciaMunicipioMes, Fecha = Código.mes)
library(dplyr)
datos_paro <- read.table("https://sede.sepe.gob.es/es/portaltrabaja/resources/sede/datos_abiertos/datos/Paro_por_municipios_2019_csv.csv",
skip=1,header = TRUE, sep=";", quote = "\"", fileEncoding="latin1")
head(datos_paro)
# Filtrar datos para la región de Murcia
paro_murcia <- datos_paro[datos_paro$Comunidad.Autónoma == "Murcia, Región de",]
# Seleccionar las columnas requeridas
paro2019MurciaMunicipioMes <- paro_murcia[, c("Código.mes", "Codigo.Municipio", "Municipio", "total.Paro.Registrado")]
#paro2019MurciaMunicipioMes <- rename(paro2019MurciaMunicipioMes, Fecha = Código.mes)
paro2019MurciaMunicipioMes <- rename(paro2019MurciaMunicipioMes, Fecha = Código.mes)
head(paro2019MurciaMunicipioMes)
library(dplyr)
datos_paro <- read.table("https://sede.sepe.gob.es/es/portaltrabaja/resources/sede/datos_abiertos/datos/Paro_por_municipios_2019_csv.csv",
skip=1,header = TRUE, sep=";", quote = "\"", fileEncoding="latin1")
head(datos_paro)
# Librerias a utilizar
library(dplyr)
library(lubridate)
# Leer datos de tabla
datos_paro <- read.table("https://sede.sepe.gob.es/es/portaltrabaja/resources/sede/datos_abiertos/datos/Paro_por_municipios_2019_csv.csv",
skip=1,header = TRUE, sep=";", quote = "\"", fileEncoding="latin1" , trim=TRUE)
# Librerias a utilizar
library(dplyr)
library(lubridate)
# Leer datos de tabla
datos_paro <- read.table("https://sede.sepe.gob.es/es/portaltrabaja/resources/sede/datos_abiertos/datos/Paro_por_municipios_2019_csv.csv",
skip=1,header = TRUE, sep=";", quote = "\"", fileEncoding="latin1" , trim=TRUE)
# Leer datos de tabla
datos_paro <- read.table("https://sede.sepe.gob.es/es/portaltrabaja/resources/sede/datos_abiertos/datos/Paro_por_municipios_2019_csv.csv",
skip=1,header = TRUE, sep=";", quote = "\"", fileEncoding="latin1")
# Print datos obtenidos
head(datos_paro)
# Filtrar datos para la región de Murcia
paro_murcia <- datos_paro[datos_paro$Comunidad.Autónoma == "Murcia, Región de",]
# Seleccionar las columnas requeridas
paro2019MurciaMunicipioMes <- paro_murcia[, c("Código.mes", "Codigo.Municipio", "Municipio", "total.Paro.Registrado")]
# Renombrar columna Código.mes por Fecha
paro2019MurciaMunicipioMes <- rename(paro2019MurciaMunicipioMes, Fecha = "Código.mes")
head(paro2019MurciaMunicipioMes)
# Calcular la media
paro2019MurciaMunicipio <- paro2019MurciaMunicipioMes %>%
group_by(Codigo.Municipio, Municipio) %>%
summarise(media.Paro.Registrado = mean(total.Paro.Registrado))
# Ordernar por Código.Municipio
paro2019MurciaMunicipio <- arrange(paro2019MurciaMunicipio, Codigo.Municipio)
# Imprime
head (paro2019MurciaMunicipio)
# Download the Wikipedia data
page = read_html("https://es.wikipedia.org/wiki/Anexo:Municipios_de_la_Regi%C3%B3n_de_Murcia")
# Bajar los datos de wikipedia
page = read_html("https://es.wikipedia.org/wiki/Anexo:Municipios_de_la_Regi%C3%B3n_de_Murcia")
# Librerias a utilizar
library(dplyr)
library(lubridate)
# Leer datos de tabla
datos_paro <- read.table("https://sede.sepe.gob.es/es/portaltrabaja/resources/sede/datos_abiertos/datos/Paro_por_municipios_2019_csv.csv",
skip=1,header = TRUE, sep=";", quote = "\"", fileEncoding="latin1" , trim=TRUE)
# Librerias a utilizar
library(dplyr)
library(lubridate)
# Leer datos de tabla
datos_paro <- read.table("https://sede.sepe.gob.es/es/portaltrabaja/resources/sede/datos_abiertos/datos/Paro_por_municipios_2019_csv.csv",
skip=1,header = TRUE, sep=";", quote = "\"", fileEncoding="latin1")
# Print datos obtenidos
head(datos_paro)
# Filtrar datos para la región de Murcia
paro_murcia <- datos_paro[datos_paro$Comunidad.Autónoma == "Murcia, Región de",]
# Seleccionar las columnas requeridas
paro2019MurciaMunicipioMes <- paro_murcia[, c("Código.mes", "Codigo.Municipio", "Municipio", "total.Paro.Registrado")]
# Renombrar columna Código.mes por Fecha
paro2019MurciaMunicipioMes <- rename(paro2019MurciaMunicipioMes, Fecha = "Código.mes")
# TODO: cambiar el formato de la fecha
# Format the Fecha column to DD/MM/YYYY
# Format the Fecha column to DD/MM/YYYY in another column TEST
head(paro2019MurciaMunicipioMes)
# Calcular la media
paro2019MurciaMunicipio <- paro2019MurciaMunicipioMes %>%
group_by(Codigo.Municipio, Municipio) %>%
summarise(media.Paro.Registrado = mean(total.Paro.Registrado))
# Ordernar por Código.Municipio
paro2019MurciaMunicipio <- arrange(paro2019MurciaMunicipio, Codigo.Municipio)
# Imprime
head (paro2019MurciaMunicipio)
#plot(paro2019MurciaMunicipio)
# Bajar los datos de wikipedia
page = read_html("https://es.wikipedia.org/wiki/Anexo:Municipios_de_la_Regi%C3%B3n_de_Murcia")
# Bajar los datos de wikipedia
install.packages("rvest")  # Install the rvest package
library(rvest)
page = read_html("https://es.wikipedia.org/wiki/Anexo:Municipios_de_la_Regi%C3%B3n_de_Murcia")
# Bajar los datos de wikipedia
install.packages("rvest")  # Install the rvest package
library(rvest)
page = read_html("https://es.wikipedia.org/wiki/Anexo:Municipios_de_la_Regi%C3%B3n_de_Murcia")
my.table = html_node(page, ".wikitable")
my.table = html_table(my.table, fill = TRUE)
head(my.table)
# Unir los dos data.frame
paro2019MurciaMunicipioPob <- merge(paro2019MurciaMunicipio, my.table, by = "Municipio", all.x = TRUE)
# Rename de columnas
paro2019MurciaMunicipioPob <- rename(paro2019MurciaMunicipioPob, Poblacion = "Población (2022)[1]​")
paro2019MurciaMunicipioPob <- rename(paro2019MurciaMunicipioPob, Superficie = "Superficie (km²)[2]​")
paro2019MurciaMunicipioPob <- rename(paro2019MurciaMunicipioPob, Comarca = "Comarca[3]​")
names(paro2019MurciaMunicipioPob)
# Transformar a numero
paro2019MurciaMunicipioPob$media.Paro.Registrado <- as.numeric(paro2019MurciaMunicipioPob$media.Paro.Registrado)
paro2019MurciaMunicipioPob$Poblacion <- as.numeric(paro2019MurciaMunicipioPob$Poblacion)
# Calcular porc.Paro.Registrado.Poblacion
paro2019MurciaMunicipioPob$porc.Paro.Registrado.Poblacion <- 100 * (paro2019MurciaMunicipioPob$media.Paro.Registrado / paro2019MurciaMunicipioPob$Poblacion)
names (paro2019MurciaMunicipioPob)
#paro2019MurciaMunicipioPob <- paro2019MurciaMunicipioPob[-4,]
# Sort the data frame by Codigo.Municipio
paro2019MurciaMunicipioPob <- paro2019MurciaMunicipioPob[order(paro2019MurciaMunicipioPob$Codigo.Municipio), ]
# Print the resulting data frame
print(paro2019MurciaMunicipioPob)
names(paro2019MurciaMunicipioPob)
install.packages("rvest")
# Print the resulting data frame
print(paro2019MurciaMunicipioPob)
print (paro2019MurciaMunicipio)
library("tm")
setwd("/Users/jorgebarquero/GitRepos/r/Sistemas de Recomendación/EjercicioPeliculas")
setwd("/Users/jorgebarquero/GitRepos/r/Sistemas de Recomendación/")
setwd("/Users/jorgebarquero/GitRepos/r/Sistemas Recomendación/")
setwd("/Users/jorgebarquero/GitRepos/r/Sistemas Recomendación/EjercicioFinal")
productos = read.csv2("productos.csv", stringsAsFactors = False)
productos = read.csv2("data/productos.csv", stringsAsFactors = False)
productos = read.csv2("data/productos.csv", stringsAsFactors = FALSE)
print (productos()
print (productos)
productos
View(productos)
# Analisis del data set
str (productos)
productos$Titulo[1:10]
productos$Descripcion[1:10]
productos$Tipo[1:10]
View(productos)
#
dim(productos)[1]
corpus <- Corpus(VectorSource(productos$Descripcion[1:Muestra]))
Muestra = 1000
corpus <- Corpus(VectorSource(productos$Descripcion[1:Muestra]))
corpus[[1]]$content
corpus[[1]]$meta
corpus2 <- tm_map(corpus, PlainTextDocument)
corpus2[[1]]$content[1]
corpus2 <- tm_map(corpus2, content_transformer(tolower))
corpus2 <- tm_map(corpus, PlainTextDocument)
corpus[[1]]$meta
corpus[[1]]$meta
corpus2 <- tm_map(corpus2, content_transformer(tolower))
corpus2[[1]]$content[1]
# Parámetros iniciales
setwd("/Users/jorgebarquero/GitRepos/r/Sistemas Recomendación/EjercicioFinal")
# Carga de archivo
productos = read.csv2("data/productos.csv", stringsAsFactors = FALSE)
str (productos)
productos$Titulo[1:10]
productos$Descripcion[1:10]
productos$Tipo[1:10]
dim(productos)[1]
Muestra = 1000
corpus <- Corpus(VectorSource(productos$Descripcion[1:Muestra]))
corpus[[1]]$content
corpus[[1]]$meta
corpus2 <- tm_map(corpus, PlainTextDocument)
corpus2[[1]]$content[1]
corpus2 <- tm_map(corpus2, content_transformer(tolower))
