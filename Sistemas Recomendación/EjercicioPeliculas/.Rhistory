setwd("D:/Documentos, Trabajos y Demás/Formación/ENAE/202104")
setwd("D:/Documentos, Trabajos y Demás/Formación/ENAE/202104")
if(!require("tm")){
install.packages("tm")
library("tm")
}
setwd("/Users/jorgebarquero/GitRepos/python/Estudio/Data Science/Sistemas de Recomendación'
setwd("/Users/jorgebarquero/GitRepos/python/Estudio/Data Science/Sistemas de Recomendación/EjercicioPeliculas")
setwd("/Users/jorgebarquero/GitRepos/python/Estudio/Data Science/Sistemas de Recomendación/EjercicioPeliculas")
Peliculas=read.csv2("data/dataset Peliculas.csv", stringsAsFactors = FALSE,encoding = "WINDOWS-1252",fileEncoding = "WINDOWS-1252")
str(Peliculas)
Peliculas$Titulo[1:10]
Peliculas$Rating[1:10]
Peliculas$Sinopsis[1:3]
ListadoPeliculas=Peliculas$Titulo
ListadoPeliculas[1:10]
Peliculas$Titulo[1:10]
Peliculas$Rating[1:10]
Peliculas$Sinopsis[1:3]
ListadoPeliculas=Peliculas$Titulo
ListadoPeliculas[1:10]
dim(Peliculas)[1]
Muestra=1000
corpus<-Corpus(VectorSource(Peliculas$Sinopsis[1:Muestra]))
corpus[[1]]$content
corpus[[1]]$meta
corpus2<-tm_map(corpus, PlainTextDocument)
corpus2[[1]]$content[1]
corpus2<-tm_map(corpus2, content_transformer(tolower))
corpus2[[1]]$content[1]
#stopwords("spanish")
corpus2<-tm_map(corpus2, removeWords, stopwords("spanish"))
corpus2[[1]]$content[1]
corpus2<-tm_map(corpus2, removeWords, c("pelicula","actor","film"))
corpus2[[1]]$content[1]
corpus2<-tm_map(corpus2, removePunctuation)
corpus2[[1]]$content[1]
corpus2<-tm_map(corpus2, removeNumbers)
corpus2[[1]]$content[1]
corpus2<-tm_map(corpus2, content_transformer(function(x) {gsub('\\b\\w{1,2}\\b','',x)}))
corpus2[[1]]$content[1]
corpus2<-tm_map(corpus2, content_transformer(function(x) {gsub('¡','',x)}))
corpus2[[1]]$content[1]
corpus2<-tm_map(corpus2, content_transformer(function(x) {gsub('á','a',x)}))
corpus2<-tm_map(corpus2, content_transformer(function(x) {gsub('é','e',x)}))
corpus2<-tm_map(corpus2, content_transformer(function(x) {gsub('í','i',x)}))
corpus2<-tm_map(corpus2, content_transformer(function(x) {gsub('ó','o',x)}))
corpus2<-tm_map(corpus2, content_transformer(function(x) {gsub('ú','u',x)}))
corpus2[[1]]$content[1]
corpus2<-tm_map(corpus2, stripWhitespace)
corpus2[[1]]$content[1]
tdm<-TermDocumentMatrix(corpus2, control=list(wordLengths=c(1,Inf)))
tdm$dimnames$Docs=Peliculas$Titulo[1:Muestra]
dtm<-DocumentTermMatrix(corpus2, control=list(wordLengths=c(1,Inf)))
dtm$dimnames$Docs=Peliculas$Titulo[1:Muestra]
tdm
str(tdm)
dtm
str(dtm)
length(tdm$dimnames$Terms)
Terminos=tdm$dimnames$Terms[order(tdm$dimnames$Terms)]
Terminos
tdm2<-TermDocumentMatrix(corpus2, control=list(wordLengths=c(1,Inf),weighting=function(x) weightTfIdf(x,normalize=TRUE)))
tdm2$dimnames$Docs=Peliculas$Titulo[1:Muestra]
dtm2<-DocumentTermMatrix(corpus2, control=list(wordLengths=c(1,Inf),weighting=function(x) weightTfIdf(x,normalize=TRUE)))
dtm2$dimnames$Docs=Peliculas$Titulo[1:Muestra]
tdm2
str(tdm2)
dtm2
str(dtm2)
tdm2<-TermDocumentMatrix(corpus2, control=list(wordLengths=c(1,Inf),weighting=function(x) weightTfIdf(x,normalize=TRUE)))
tdm2$dimnames$Docs=Peliculas$Titulo[1:Muestra]
dtm2<-DocumentTermMatrix(corpus2, control=list(wordLengths=c(1,Inf),weighting=function(x) weightTfIdf(x,normalize=TRUE)))
dtm2$dimnames$Docs=Peliculas$Titulo[1:Muestra]
tdm2
str(tdm2)
dtm2
str(dtm2)
dim(tdm2)
inspect(tdm2[1:10,1:5])
Pelicula= 7 # numero o nombre completo
inspect(tdm2[,Pelicula])
Pelicula= 20 # numero o nombre completo
inspect(tdm2[,Pelicula])
ListadoPeliculas[5]
Pelicula= "El señor de los anillos: La comunidad del anillo" # numero o nombre completo
inspect(tdm2[,Pelicula])
termino="guerra"
inspect(tdm2[termino,])
termino="boda"
inspect(tdm2[termino,])
termino="mafia"
inspect(tdm2[termino,])
termino="princesa"
source("~/GitRepos/python/Estudio/Data Science/Sistemas de Recomendación/EjercicioPeliculas/Sistema de Recomendación V3 Peliculas.R", echo=TRUE)
